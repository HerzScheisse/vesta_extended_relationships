<?php

use Fisharebest\Webtrees\I18N;
use Fisharebest\Webtrees\Individual;
use Fisharebest\Webtrees\Module\FamilyListModule;
use Fisharebest\Webtrees\Module\IndividualListModule;
use Fisharebest\Webtrees\Registry;
use function GuzzleHttp\json_encode;

?>

<table
    class="table table-bordered table-sm wt-table-surname datatables d-none"
    <?= view('lists/datatables-attributes') ?>
    data-info="false"
    data-paging="false"
    data-searching="false"
    data-order="<?= e(json_encode($order ?? [[1, 'desc']])) ?>"
>
    <caption class="sr-only">
        <?= I18N::translate('Surnames') ?>
    </caption>
    <thead>
        <tr>
            <th>
                <?= I18N::translate('Surname') ?>
            </th>
            <?php
              //[RC] added
            ?>
            <th><?= I18N::translate('Patriarch') ?></th>
            <th>
                <?php if ($families) :?>
                    <?= I18N::translate('Spouses') ?>
                <?php else : ?>
                    <?= I18N::translate('Individuals') ?>
                <?php endif ?>
            </th>
        </tr>
    </thead>

    <tbody>
        <?php foreach ($surnames as $surn => $surns) : ?>
            <tr>
                <td data-sort="<?= e($surn) ?>">
                    <!-- Multiple surname variants, e.g. von Groot, van Groot, van der Groot, etc. -->
                    <?php foreach ($surns as $spfxsurn_ => $indis) : ?>
                        <?php
                          //[RC] adjusted
                          $spfxsurn = $indis->getActualSurname();
                        ?>
                        <?php if ($module instanceof IndividualListModule || $module instanceof FamilyListModule) : ?>
                            <?php if ($spfxsurn) : ?>
                                <?php if ($surn !== '') : ?>
                                    <a href="<?= $module->listUrl($tree, ['surname' => $surn]) ?>" dir="auto">
                                        <?= e($spfxsurn) ?>
                                    </a>
                                <?php else : ?>
                                    <a href="<?= $module->listUrl($tree, ['alpha' => ',']) ?>" dir="auto">
                                        <?= e($spfxsurn) ?>
                                    </a>
                                <?php endif ?>
                            <?php else : ?>
                                <!-- No surname, but a value from "2 SURN"? A common workaround for toponyms, etc. -->
                                <a href="<?= $module->listUrl($tree, ['surname' => $surn]) ?>" dir="auto"><?= e($surn) ?></a>
                            <?php endif ?>
                        <?php else : ?>
                            <?php if ($spfxsurn) : ?>
                                <span dir="auto"><?= e($spfxsurn) ?></span>
                            <?php else : ?>
                                <!-- No surname, but a value from "2 SURN"? A common workaround for toponyms, etc. -->
                                <span dir="auto"><?= e($surn) ?></span>
                            <?php endif ?>    
                        <?php endif ?>
                        <br>
                    <?php endforeach ?>
                </td>
                <?php
                  //[RC] added
                ?>
                <td data-sort="<?= e($surn) ?>">
                  <?php 
                  foreach ($surns as $indis) {
                    $patriarch = null;
                    $patriarchXref = $indis->getPatriarchXref();
                    if (!$indis->isSame()) {
                      /** @var Individual */
                      $patriarch = Registry::individualFactory()->make($patriarchXref, $tree);                      
                    }
                    if (($patriarch != null) && $patriarch->canShow()) {
                      ?><a href="<?= e($patriarch->url()) ?>"><?= $patriarch->fullName() ?></a><br /><?php
                    }
                  }
                  ?>
                </td>
                <?php
                  //[RC] adjusted
                  $sum = 0;
                  foreach ($surns as $indis) {
                    $sum += $indis->getCount();
                  }
                ?>
                <td class="text-center" data-sort="<?= $sum ?>">
                    <?php foreach ($surns as $indis) : ?>
                        <?php
                           //[RC] adjusted
                        ?>
                        <?= I18N::number($indis->getCount()) ?>
                        <br>
                    <?php endforeach ?>

                    <?php if (count($surns) > 1) : ?>
                        <?= I18N::number($sum) ?>
                    <?php endif ?>
                </td>
            </tr>
        <?php endforeach ?>
    </tbody>
</table>
